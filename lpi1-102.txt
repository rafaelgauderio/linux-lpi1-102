105. SHELL E SHELL SCRIPTING

	Customizacao do Shell
		-> Deixar um funcao sempre disponivel (global ou localmente)
		-> configuracoes feitas atraves de arquivos
	Arquivos de configuração global aplicados a todos os usuários

# cat /etc/profile - primeiro arquivo executado no login
# cat /etc/profile.d/ - diretorio dos scripts
# cat /etc/bash.bashrc - Toda nova sessao de shell bash
# cat /etc/inputrc - Custmização de teclado e do terminal
# cat /etc/skel/ - esses arquivos vao para o home de todo novo usuario

	Arquivos de configuracao local
	Os arquivos que começam com . são ocultos
# cat ~/.bash_profile - executado após o etc/profile
# cat ~/.bash_login - executado se nao existir o arquivo acima
# cat ~/.profile - executado se nao existir o arquivo acima
# cat ~/bashrc - executado apos o /etc/bash.bashrc
# cat ~/.inputrc - nivel de usuario para customizacao de teclado e opcoes de terminal
# cat ~/.bash_logout - executado durante o logout 

	Configuracoes locais podem sobrescreve as globais
# cd /home/lpi1/Exercicios
# TESTE="Valor"
# env | grep TESTE
# set | grep TESTE - encontra sem ter exportado
	4 maneiras de executar um script	
# source Script_Variavel.sh - executa o shell local, encontra variavel local
# . Script_variavel.sh - roda localmente
# exec ./Script_variavel.sh - Executa e fecha o script
# ./Script_variavel.sh - nao acha o valor da variavel TESTE, tem que ter a permissao
# export TESTE
# chmod +x Script_Variavel.sh == # chmod ugo+x Script_Variavel.sh

# alias dt="date +%h:%m"	# dt
# alias - mostra todos os alias do bash atual

	Maneiras de definir uma funcao nos scripts
# set - mostra todas as funcoes definidas
# function funcao1 {
	> date;
	> uptime;
	> echo "Fim da funcao1";
	>}
# funcao1	
# function funcao2 { data; uptime; ls -a; }
# function funcao3() {uptime; uname -v; hostname; }

# chsh - change login shell = altera o shell utilizado pelo usuario
# vim ~/.profile
	PATH=$/HOME/Scripts:$HOME/BIN...
# echo $PATH
# PrimeiroScript.sh = Agora encontra o script, pois o Home/Scripts tambem esta na lista de busca do PATH
	Informar qual linguagem utiliza, sem ser o bash
#!/bin/perl	#!/bin/bash	#!/bin/csh

	Colocado parametros nos scripts
	$0= nome do Script	$1=paramentro1	$2=paramentro2
# ./PrimeiroScript.sh 17 Rafael
	Declarando variaveis
	VARIAVEL1="texto"	VARIAVEL2=35	VARIAVEL4=`cat /etc/passwd | wl -l`
	VARIAVEL5=$(date + %H:%M:%S)
# $VARIAVEL1	# $VARIAVEL=4

	Comando teste expressao
# test -f /etc/profile		# teste [-f /etc/profile]
	-f file
	-d directory
	-r permissao read
	-w permissao write
	-x permissao execute
	-s Tamanho é maior que zero
	
	Comparando variaveis (verifica se a variável é...)
# -n $VAR1	non zero
# -z $VAR1	zero 
# $VAR1		verdadeiro se $VAR != nulo
# String1 = String2 - Compara se são iguais as Strings
# String1 != String2 - Compara se são diferentes as String

	Comparação de Valores Numéricos (Verdadeiro se...)
# Valor1 -eq Valor2 - equal
# Valor1 -ne Valor2 - not equal
# Valor1 -gt Valor2 - greater than
# Valor1 -ge Valor2 - greater or equal
# Valor1 -lt Valor2 - less than
# Valor1 -le Valor2 - less or equal

	Estruturas lógicas
# echo $? -> 0 = Sucesso
	  -> 1 = Error
# test -f /etc/profile : testa de o arquivo existe
# test 10 -gt 35 = 1
# test 10 -lt 35 = 0

# vim /etc/profile
	if [ "`id -u` -eq 0 ] ; then
		PSI='#'
	else 
		PSI='$'
	fi
# vim /etc/bash.bashrc	= exemplo de script
# vim /home/rafael/scripts/PrimeiroScrit.sh
		case Variavel in
			0)
				echo "Você escolheu zero"
				sleep 15
			;;
			1/2/3/4)
				echo "Você escolheu diferente de zero"
			;;
			*)
		esac

Rotinas de loop - for e while
# seq 10   -> 1,2,3,4...10
# expr	1 + 2   -> 3 (tem que haver os espaços)

# /home/rafael/Scripts/. for_Script.sh 15	-> Script com parametro	
	VAR1=10
	for
		i in `seq 7`	
	do
		j= $(expr $i + VAR1)
		echo "$i + $VAR1 = $j"
		sleep 1
	done

while = executa um loop enquanto uma condição for verdadeira

	while [ $VAR1 -le $1]
	do
		echo "-le = less or equal"
		VAR1 = $( expr $ VAR1 + 1 )  -> contador
		sleep 1
	done

until = similiar ao while. Coloca uma igualdade e executa até que o 
chegue até o determinado valor.
	until [ $VAR1 = 0 ]
		do
			echo "Fazer até chegar no valor binário do until"
			VAR1 = $ ( expr $VAR1 - 1)
			slepp 0.5
		done
diferença while e until
	until = até que = operador binário
	while = enquanto = operador condicionar = lessn than, less or equal, not equal

------------------------------------------------------------
	COMANDO SEQUENCIAIS NO LINUX
 
 # cat /home/rafael teste.txt | wc -l   = conta as linha do arquivo teste.txt 
	; = executa o próximo mesmo que haja um erro
 # date ; ls -l arquivo_grande.txt ; echo Exemplo
	&& = executa o 2º comando somente se o 1º funcionar
 # ls -l arquivo_novo.txt && echo Exeplo && date
	|| = executa o 2º comando somente se o 1º NÃO funcionar
 # ls -l arquivo_inexistente || echo nova_mensagem && echo final
 # apt install mailutils
 # mail -s "Assusto do email" root < teste.txt
 # ls -l arquivo_novo || mail -s "Esse arquivo não existe" root <.

------------------------------------------------------------------
	INTERFACE DE USUARIOS E DESKTOP

x funciona como interface cliente-servidor.
KDE, GNOME, MATE = desktop enviroment = conjunto de aplicações com finalidade
	de desenvovler a interface gráfica amigável com o usuário
 # xcal 
 # cd /etc/X11	
 # ls -l xorg.conf
 # ps axu | grep X -> interface gráfica roda normalmente no # tty 7
 # crtl + alt + function +F1 = alteraa para tty1
 # systemctl isolate multi-user.target
 # Xorg-configure	# cd /root	# ls -l xorg.conf.new
 # cp /root/xorg.conf.new  /etc/X11/xorg.conf
 # ifconfig		#  pign [Ips das máquinas server e depois cliente]
 # echo $DISPLAY -> mostra em qual shell vai executar o programa 
			:0.0	== localhost.infodisplay
 # export DISPLAY="10.0.0.106:0.0"	# echo DISPLAY
 	na máquina cliente
 # xhost
 # xhost + 10.0.0.105 = libera a máquina
 # xhoys +server1domain.com
 # xhost + = desabilita o controle de acesso
 # ps axu | grep X
 # cd /usr/lightdm/lightdm.conf/
 # vi so-xserver-command.conf
		add line
			xserver-allow-tcp=true:wq
 # systemctl restart lightdm
	na máquina server
 # xcal
 # gnome 
 # update-alternatives -- display x-windows-manager
 # ls -l /etc/alteratives | grep window
 # cd /etc/X11
 # man xorg.conf
 # cd /usr/share/X11/xorg.conf.d/
 	liberação de aplicação remota
	copiar essa hash do MIT-MAGIG-COOKIE e colar nos server
 # xauth list
 # cat Xauthority
	na máquina server
 # xauth add 192.168.113.0 MIT-MAGIC-COKKIE [hash number do server]
 # gnome-calculator - vai ter que aparecer no cliente

		PROCOLOS DE ACESSO REMOTO 
XDMCP = x Display Manager Control Protocol
VNC = Virtual Networking COmputing - utilizad protocolo RFB
SPICE = Silmple Protocol for independent Computing Environment = Open Source
RDP = Remote Desktop Protocol = Microsoft

# apt-get install kmag = forma de aumentar o tamanho da tela
# cat #HOME/.xsession-errors  = confirir logs referente a sua sessao no servidor




	

	
			

 
 







	
	
			
			





	
	
	

	